apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: nginx
  namespace: fullstack-app
  labels:
    app: nginx     
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: nginx     
    spec:
      initContainers:
        - name: wait-for-backend
          image: busybox:1.28
          command: ['sh', '-c', 'until nslookup backend-svc.fullstack-app.svc.cluster.local; do echo waiting for backend service; sleep 2; done;']
      containers:
        - name: nginx
          image: anupsharma329/frontend:v2.02
          ports:
          - containerPort: 80        
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
          startupProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 30
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: nginx-config
          configMap:
            name: app-config
            items:
              - key: nginx.conf     # Specify which key to use
                path: nginx.conf

---

# Single Frontend Service - NodePort for both internal and external access
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
  namespace: fullstack-app
  labels:
    app: nginx
spec:
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080  # External access: http://<node-ip>:30080
      protocol: TCP
  type: NodePort
